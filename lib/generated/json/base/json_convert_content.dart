// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:my_app/model/movie_entity.dart';
import 'package:my_app/generated/json/movie_entity_helper.dart';
import 'package:my_app/model/comments_entity.dart';
import 'package:my_app/generated/json/comments_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case MovieEntity:
			return movieEntityFromJson(data as MovieEntity, json) as T;			case MovieMovie:
			return movieMovieFromJson(data as MovieMovie, json) as T;			case CommentsEntity:
			return commentsEntityFromJson(data as CommentsEntity, json) as T;			case CommantsCommants:
			return commantsCommantsFromJson(data as CommantsCommants, json) as T;    }
    return data as T;
  }  static _getToJson<T>(Type type, data) {
		switch (type) {			case MovieEntity:
			return movieEntityToJson(data as MovieEntity);			case MovieMovie:
			return movieMovieToJson(data as MovieMovie);			case CommentsEntity:
			return commentsEntityToJson(data as CommentsEntity);			case CommantsCommants:
			return commantsCommantsToJson(data as CommantsCommants);    }
    return data as T;
  }  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {			case 'MovieEntity':
			return MovieEntity().fromJson(json) as T;			case 'MovieMovie':
			return MovieMovie().fromJson(json) as T;			case 'CommentsEntity':
			return CommentsEntity().fromJson(json) as T;			case 'CommantsCommants':
			return CommantsCommants().fromJson(json) as T;    }
    return null;
  }}